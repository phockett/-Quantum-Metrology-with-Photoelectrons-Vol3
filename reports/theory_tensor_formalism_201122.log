Traceback (most recent call last):
  File "/opt/conda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/opt/conda/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# As above, but for a time-dependent case...
# SHOULD BE per http://jake/jupyter/user/paul/doc/tree/code-share/jupyter-shared/PEMtk_dev_2022/basisSets/PEMtk_fitting_basis-set_demo_050621-full-revisit-Jake_040822.ipynb
# BUT CURRENTLY not working - issue with dims and/or recent code changes?

# Import routines
from epsproc.calc import density

# Set some test data - here include time-dependence
testBasis = (basis['BLMtableResort'] * basis['polProd']).sel({'Labels':'A', 'S-Rp':0})

# Compose density matrix
# Set dimensions/state vector/representation
# These must be in original data, but will be restacked as necessary to define the effective basis space.
# denDims = 'LM'  #, 'mu']

# denDims = list(set(testBasis.dims) - set('t')) # FAILS on restack, not sure why.
# above gives: ['L', 'mp', 'M', 'l', 'lp', 'mup', 'm', 'mu']
denDims = ['mp','l', 'lp', 'm']

selDims = None  #{'Type':'L'}
pTypes=['r','i']
thres = 1e-4    # 0.2 # Threshold out l>3 terms if using full 'orb5' set.
normME = False
normDen = 'max'

# Calculate - Ref case
# matE = data.data['subset']['matE']
# Set data from master class
# k = 'orb5'  # N2 orb5 (SG) dataset
# k = 'subset'
k = sym
# matE = data.data[k]['matE']
matE = testBasis

if normME:
    matE = matE/matE.max()

daOut, *_ = density.densityCalc(matE, denDims = denDims, selDims = selDims, thres = thres, sumDims=False)   #, compute=False)

if normDen=='max':
    daOut = daOut/daOut.max()
elif normDen=='trace':
    daOut = daOut/(daOut.sum('Sym').pipe(np.trace)**2)  # Need sym sum here to get 2D trace
    
# daPlot = density.matPlot(daOut.sum('Sym'))
daPlot = density.matPlot(daOut.sum('Sym'), pTypes=pTypes)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/common.py[0m in [0;36m_get_axis_num[0;34m(self, dim)[0m
[1;32m    181[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 182[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mdims[0m[0;34m.[0m[0mindex[0m[0;34m([0m[0mdim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    183[0m         [0;32mexcept[0m [0mValueError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: tuple.index(x): x not in tuple

During handling of the above exception, another exception occurred:

[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_85088/4168892302.py[0m in [0;36m<module>[0;34m[0m
[1;32m     44[0m [0;34m[0m[0m
[1;32m     45[0m [0;31m# daPlot = density.matPlot(daOut.sum('Sym'))[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 46[0;31m [0mdaPlot[0m [0;34m=[0m [0mdensity[0m[0;34m.[0m[0mmatPlot[0m[0;34m([0m[0mdaOut[0m[0;34m.[0m[0msum[0m[0;34m([0m[0;34m'Sym'[0m[0;34m)[0m[0;34m,[0m [0mpTypes[0m[0;34m=[0m[0mpTypes[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/common.py[0m in [0;36mwrapped_func[0;34m(self, dim, axis, skipna, **kwargs)[0m
[1;32m     56[0m [0;34m[0m[0m
[1;32m     57[0m             [0;32mdef[0m [0mwrapped_func[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mdim[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mskipna[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 58[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mreduce[0m[0;34m([0m[0mfunc[0m[0;34m,[0m [0mdim[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mskipna[0m[0;34m=[0m[0mskipna[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     59[0m [0;34m[0m[0m
[1;32m     60[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/dataarray.py[0m in [0;36mreduce[0;34m(self, func, dim, axis, keep_attrs, keepdims, **kwargs)[0m
[1;32m   2694[0m         """
[1;32m   2695[0m [0;34m[0m[0m
[0;32m-> 2696[0;31m         [0mvar[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mvariable[0m[0;34m.[0m[0mreduce[0m[0;34m([0m[0mfunc[0m[0;34m,[0m [0mdim[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mkeep_attrs[0m[0;34m,[0m [0mkeepdims[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2697[0m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_replace_maybe_drop_dims[0m[0;34m([0m[0mvar[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2698[0m [0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/variable.py[0m in [0;36mreduce[0;34m(self, func, dim, axis, keep_attrs, keepdims, **kwargs)[0m
[1;32m   1795[0m [0;34m[0m[0m
[1;32m   1796[0m         [0;32mif[0m [0mdim[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1797[0;31m             [0maxis[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_axis_num[0m[0;34m([0m[0mdim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1798[0m [0;34m[0m[0m
[1;32m   1799[0m         [0;32mwith[0m [0mwarnings[0m[0;34m.[0m[0mcatch_warnings[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/common.py[0m in [0;36mget_axis_num[0;34m(self, dim)[0m
[1;32m    176[0m             [0;32mreturn[0m [0mtuple[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_get_axis_num[0m[0;34m([0m[0md[0m[0;34m)[0m [0;32mfor[0m [0md[0m [0;32min[0m [0mdim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 178[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_get_axis_num[0m[0;34m([0m[0mdim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    179[0m [0;34m[0m[0m
[1;32m    180[0m     [0;32mdef[0m [0m_get_axis_num[0m[0;34m([0m[0mself[0m[0;34m:[0m [0mAny[0m[0;34m,[0m [0mdim[0m[0;34m:[0m [0mHashable[0m[0;34m)[0m [0;34m->[0m [0mint[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/common.py[0m in [0;36m_get_axis_num[0;34m(self, dim)[0m
[1;32m    182[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mdims[0m[0;34m.[0m[0mindex[0m[0;34m([0m[0mdim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    183[0m         [0;32mexcept[0m [0mValueError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 184[0;31m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34mf"{dim!r} not found in array dimensions {self.dims!r}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    185[0m [0;34m[0m[0m
[1;32m    186[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: 'Sym' not found in array dimensions ('L', 'mu', 'mup', 'mp,m,lp,l', 'mp,m,lp,l_p')
ValueError: 'Sym' not found in array dimensions ('L', 'mu', 'mup', 'mp,m,lp,l', 'mp,m,lp,l_p')

