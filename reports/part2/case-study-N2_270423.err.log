Traceback (most recent call last):
  File "/opt/conda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/conda/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/conda/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/conda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/conda/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/conda/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/conda/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# paramPlot can be used to check the spread on each parameter.
# Plots use Seaborn or Holoviews/Bokeh
# Colour-mapping is controlled by the 'hue' paramter, additionally pass hRound for sig. fig control.
# The remap setting allows for short-hand labels as set in data.lmmu

paramType = 'm' # Set for (m)agnitude or (p)hase parameters
hRound = 14 # Set for cmapping, default may be too small (leads to all grey cmap on points)

data.paramPlot(selectors={'Type':paramType, 'redchiGroup':selGroup}, hue = 'redchi', 
               backend=paramPlotBackend, hvType='violin', 
               returnFlag = True, hRound=hRound, remap = 'lmMap');
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
Cell [0;32mIn[16], line 9[0m
[1;32m      6[0m paramType [38;5;241m=[39m [38;5;124m'[39m[38;5;124mm[39m[38;5;124m'[39m [38;5;66;03m# Set for (m)agnitude or (p)hase parameters[39;00m
[1;32m      7[0m hRound [38;5;241m=[39m [38;5;241m14[39m [38;5;66;03m# Set for cmapping, default may be too small (leads to all grey cmap on points)[39;00m
[0;32m----> 9[0m [43mdata[49m[38;5;241;43m.[39;49m[43mparamPlot[49m[43m([49m[43mselectors[49m[38;5;241;43m=[39;49m[43m{[49m[38;5;124;43m'[39;49m[38;5;124;43mType[39;49m[38;5;124;43m'[39;49m[43m:[49m[43mparamType[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mredchiGroup[39;49m[38;5;124;43m'[39;49m[43m:[49m[43mselGroup[49m[43m}[49m[43m,[49m[43m [49m[43mhue[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mredchi[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[1;32m     10[0m [43m               [49m[43mbackend[49m[38;5;241;43m=[39;49m[43mparamPlotBackend[49m[43m,[49m[43m [49m[43mhvType[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mviolin[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[1;32m     11[0m [43m               [49m[43mreturnFlag[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mhRound[49m[38;5;241;43m=[39;49m[43mhRound[49m[43m,[49m[43m [49m[43mremap[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mlmMap[39;49m[38;5;124;43m'[39;49m[43m)[49m;

File [0;32m~/github/PEMtk/pemtk/fit/_analysis.py:1131[0m, in [0;36mparamPlot[0;34m(self, selectors, hue, hRound, x, y, key, dataDict, dataPF, plotDict, hvType, plotScatter, remap, backend, returnFlag, **kwargs)[0m
[1;32m   1128[0m     [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m'[39m[38;5;124mSet selectors = [39m[38;5;132;01m{[39;00mselectors[38;5;132;01m}[39;00m[38;5;124m from keyword args, pass dict of selectors[level] = key, for more flexibility[39m[38;5;124m'[39m)
[1;32m   1130[0m [38;5;66;03m# Multiple XS from selectors dict.[39;00m
[0;32m-> 1131[0m pData [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_subsetFromXS[49m[43m([49m[43mselectors[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mselectors[49m[43m,[49m[43m [49m[43mdata[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mpData[49m[43m)[49m  [38;5;66;03m# Allow XS over multiple dims.[39;00m
[1;32m   1133[0m [38;5;66;03m# Melt to long form for sns.catplot functionality[39;00m
[1;32m   1134[0m [38;5;66;03m# TODO: check & fix any non-consistent dim handling here![39;00m
[1;32m   1135[0m [38;5;28;01mif[39;00m hue [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1136[0m     [38;5;66;03m# hue = selLevel[39;00m

File [0;32m~/github/PEMtk/pemtk/fit/_filters.py:45[0m, in [0;36m_subsetFromXS[0;34m(self, selectors, data)[0m
[1;32m     42[0m dataOut [38;5;241m=[39m data[38;5;241m.[39mcopy()
[1;32m     44[0m [38;5;66;03m# Check dims, remove any missing dims[39;00m
[0;32m---> 45[0m selCheck [38;5;241m=[39m [43msubselectDims[49m[43m([49m[43mdata[49m[43m,[49m[43mselectors[49m[43m)[49m
[1;32m     47[0m [38;5;66;03m# Basic subselection (indexes) - needs dim checking[39;00m
[1;32m     48[0m [38;5;28;01mfor[39;00m k,v [38;5;129;01min[39;00m selCheck[38;5;241m.[39mitems():

File [0;32m~/github/ePSproc/epsproc/util/misc.py:916[0m, in [0;36msubselectDims[0;34m(data, refDims, ignoreItems)[0m
[1;32m    914[0m     dimSets [38;5;241m=[39m checkDims(data, [38;5;28mlist[39m(refDims[38;5;241m.[39mkeys()))
[1;32m    915[0m [38;5;28;01melse[39;00m:
[0;32m--> 916[0m     dimSets [38;5;241m=[39m [43mcheckDims[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mrefDims[49m[43m)[49m
[1;32m    918[0m [38;5;66;03m# Subselect[39;00m
[1;32m    919[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(refDims,[38;5;28mdict[39m):
[1;32m    920[0m     [38;5;66;03m# Return dim with only subselected keys, i.e. existing dims.[39;00m

File [0;32m~/github/ePSproc/epsproc/util/misc.py:509[0m, in [0;36mcheckDims[0;34m(data, refDims, method, forceStacked)[0m
[1;32m    507[0m     [38;5;66;03m# Get data.item and data.item.names[39;00m
[1;32m    508[0m     [38;5;28;01mfor[39;00m nameList [38;5;129;01min[39;00m [base[38;5;241m.[39mto_list(), [38;5;28mlist[39m([38;5;28mgetattr[39m(base, [38;5;124m'[39m[38;5;124mnames[39m[38;5;124m'[39m))]:
[0;32m--> 509[0m         dimsUS[38;5;241m.[39mextend((nameList [38;5;28;01mif[39;00m (([43mnameList[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m) [38;5;129;01mand[39;00m ([38;5;28misinstance[39m(nameList[[38;5;241m0[39m], [38;5;28mstr[39m))) [38;5;28;01melse[39;00m []))
[1;32m    511[0m dims [38;5;241m=[39m dimsUS
[1;32m    513[0m stackedDims [38;5;241m=[39m [] [38;5;66;03m#list(set(dims) - set(dimsUS))[39;00m

[0;31mIndexError[0m: list index out of range

