Traceback (most recent call last):
  File "/opt/conda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/opt/conda/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Example using data class (setup in init script)
data = pemtkFit()
# data.setData('BLMtest',setBLMs([[0,0,1,1],[1,1,0,1],[2,2,1,1]]))   # Note different index
# data.setData(np.array([[0,0,1],[1,1,1],[2,2,1]]))   # Note different index

BLM = setBLMs([[0,0,1,1,1,1],[1,0,0,0.5,0.8,1],[2,0,1,0.5,0,0],
               [4,2,0,0,0,0.5],[4,-2,0,0,0,0.5]])

data.setData('BLMtest', BLM)
data.padPlot(keys = 'BLMtest', dataType='AFBLM', Etype='t', backend=plotBackend, plotFlag=False, returnFlag=True)  # Working
figObj = data.data['BLMtest']['plots']['AFBLM']['polar'][0]

# And GLUE for display later with caption
# from myst_nb import glue
# glue("padExamplePlot2", figObj, display=False);
gluePlotly("padExamplePlot2", figObj)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_115073/458058874.py[0m in [0;36m<module>[0;34m[0m
[1;32m      8[0m [0;34m[0m[0m
[1;32m      9[0m [0mdata[0m[0;34m.[0m[0msetData[0m[0;34m([0m[0;34m'BLMtest'[0m[0;34m,[0m [0mBLM[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 10[0;31m [0mdata[0m[0;34m.[0m[0mpadPlot[0m[0;34m([0m[0mkeys[0m [0;34m=[0m [0;34m'BLMtest'[0m[0;34m,[0m [0mdataType[0m[0;34m=[0m[0;34m'AFBLM'[0m[0;34m,[0m [0mEtype[0m[0;34m=[0m[0;34m't'[0m[0;34m,[0m [0mbackend[0m[0;34m=[0m[0mplotBackend[0m[0;34m,[0m [0mplotFlag[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mreturnFlag[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m  [0;31m# Working[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     11[0m [0mfigObj[0m [0;34m=[0m [0mdata[0m[0;34m.[0m[0mdata[0m[0;34m[[0m[0;34m'BLMtest'[0m[0;34m][0m[0;34m[[0m[0;34m'plots'[0m[0;34m][0m[0;34m[[0m[0;34m'AFBLM'[0m[0;34m][0m[0;34m[[0m[0;34m'polar'[0m[0;34m][0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     12[0m [0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/epsproc/classes/_plotters.py[0m in [0;36mpadPlot[0;34m(self, selDims, sumDims, Erange, Etype, keys, dataType, facetDims, squeeze, reducePhi, pType, pStyle, returnFlag, plotDict, backend, plotFlag, **kwargs)[0m
[1;32m    939[0m         [0;31m# If not present, assumed LM parameters, and expand on grid[0m[0;34m[0m[0;34m[0m[0m
[1;32m    940[0m         [0;32mif[0m [0;32mnot[0m [0;34m([0m[0;34m([0m[0;34m'Theta'[0m [0;32min[0m [0msubset[0m[0;34m.[0m[0mdims[0m[0;34m)[0m [0;32mor[0m [0;34m([0m[0;34m'Phi'[0m [0;32min[0m [0msubset[0m[0;34m.[0m[0mdims[0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 941[0;31m             [0msubset[0m[0;34m,[0m [0m_[0m [0;34m=[0m [0msphFromBLMPlot[0m[0;34m([0m[0msubset[0m[0;34m,[0m [0mplotFlag[0m [0;34m=[0m [0;32mFalse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    942[0m             [0msubset[0m [0;34m=[0m [0msubset[0m[0;34m.[0m[0msum[0m[0;34m([0m[0;34m'LM'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    943[0m [0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/epsproc/sphPlot.py[0m in [0;36msphFromBLMPlot[0;34m(BLMXin, res, pType, plotFlag, facetDim, backend, fnType, conj, **kwargs)[0m
[1;32m    306[0m [0;34m[0m[0m
[1;32m    307[0m         [0;31m# 27/03/23 - changed to always run plotter, allows for figure return.[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 308[0;31m         [0mfig[0m [0;34m=[0m [0msphSumPlotX[0m[0;34m([0m[0mdataPlot[0m[0;34m,[0m [0mpType[0m [0;34m=[0m [0mpType[0m[0;34m,[0m [0mfacetDim[0m [0;34m=[0m [0mfacetDim[0m[0;34m,[0m [0mbackend[0m [0;34m=[0m [0mbackend[0m[0;34m,[0m [0mplotFlag[0m [0;34m=[0m [0mplotFlag[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    309[0m [0;34m[0m[0m
[1;32m    310[0m [0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/epsproc/sphPlot.py[0m in [0;36msphSumPlotX[0;34m(dataIn, pType, facetDim, surfMap, backend, convention, titleString, plotFlag, verbose, axisUW, **kwargs)[0m
[1;32m    442[0m [0;34m[0m[0m
[1;32m    443[0m             [0;31m# Loop over facetDim with full dataArray as selector, allows for MultiIndex cases.[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 444[0;31m             [0;32mfor[0m [0mnPlot[0m [0;32min[0m [0mdataPlot[0m[0;34m[[0m[0mfacetDim[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    445[0m                 [0;31m# fig.append(sphPlotMPL(dataPlot.sel({facetDim:nPlot}).squeeze(), theta, phi,  convention = convention, tString = f"{facetDim}: {nPlot.item()}"))[0m[0;34m[0m[0;34m[0m[0m
[1;32m    446[0m                 [0;31m# {dataPlot[facetDim][nPlot].item()}"))  # Will fail if dims>2 passed.[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/dataarray.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m    739[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    740[0m             [0;31m# xarray-style array indexing[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 741[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0misel[0m[0;34m([0m[0mindexers[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0m_item_key_to_dict[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    742[0m [0;34m[0m[0m
[1;32m    743[0m     [0;32mdef[0m [0m__setitem__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mkey[0m[0;34m:[0m [0mAny[0m[0;34m,[0m [0mvalue[0m[0;34m:[0m [0mAny[0m[0;34m)[0m [0;34m->[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/dataarray.py[0m in [0;36misel[0;34m(self, indexers, drop, missing_dims, **indexers_kwargs)[0m
[1;32m   1195[0m [0;34m[0m[0m
[1;32m   1196[0m         [0;32mif[0m [0many[0m[0;34m([0m[0mis_fancy_indexer[0m[0;34m([0m[0midx[0m[0;34m)[0m [0;32mfor[0m [0midx[0m [0;32min[0m [0mindexers[0m[0;34m.[0m[0mvalues[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1197[0;31m             ds = self._to_temp_dataset()._isel_fancy(
[0m[1;32m   1198[0m                 [0mindexers[0m[0;34m,[0m [0mdrop[0m[0;34m=[0m[0mdrop[0m[0;34m,[0m [0mmissing_dims[0m[0;34m=[0m[0mmissing_dims[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1199[0m             )

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/dataset.py[0m in [0;36m_isel_fancy[0;34m(self, indexers, drop, missing_dims)[0m
[1;32m   2408[0m [0;34m[0m[0m
[1;32m   2409[0m             [0;32mif[0m [0mname[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mxindexes[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2410[0;31m                 new_var, new_index = isel_variable_and_index(
[0m[1;32m   2411[0m                     [0mname[0m[0;34m,[0m [0mvar[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mxindexes[0m[0;34m[[0m[0mname[0m[0;34m][0m[0;34m,[0m [0mvar_indexers[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2412[0m                 )

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/indexes.py[0m in [0;36misel_variable_and_index[0;34m(name, variable, index, indexers)[0m
[1;32m    526[0m         )
[1;32m    527[0m [0;34m[0m[0m
[0;32m--> 528[0;31m     [0mnew_variable[0m [0;34m=[0m [0mvariable[0m[0;34m.[0m[0misel[0m[0;34m([0m[0mindexers[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    529[0m [0;34m[0m[0m
[1;32m    530[0m     [0;32mif[0m [0mnew_variable[0m[0;34m.[0m[0mdims[0m [0;34m!=[0m [0;34m([0m[0mname[0m[0;34m,[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/variable.py[0m in [0;36misel[0;34m(self, indexers, missing_dims, **indexers_kwargs)[0m
[1;32m   1184[0m [0;34m[0m[0m
[1;32m   1185[0m         [0mkey[0m [0;34m=[0m [0mtuple[0m[0;34m([0m[0mindexers[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mdim[0m[0;34m,[0m [0mslice[0m[0;34m([0m[0;32mNone[0m[0;34m)[0m[0;34m)[0m [0;32mfor[0m [0mdim[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mdims[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1186[0;31m         [0;32mreturn[0m [0mself[0m[0;34m[[0m[0mkey[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1187[0m [0;34m[0m[0m
[1;32m   1188[0m     [0;32mdef[0m [0msqueeze[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mdim[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/variable.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m    776[0m         [0marray[0m[0;31m [0m[0;31m`[0m[0mx[0m[0;34m.[0m[0mvalues[0m[0;31m`[0m [0mdirectly[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    777[0m         """
[0;32m--> 778[0;31m         [0mdims[0m[0;34m,[0m [0mindexer[0m[0;34m,[0m [0mnew_order[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_broadcast_indexes[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    779[0m         [0mdata[0m [0;34m=[0m [0mas_indexable[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_data[0m[0;34m)[0m[0;34m[[0m[0mindexer[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    780[0m         [0;32mif[0m [0mnew_order[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/variable.py[0m in [0;36m_broadcast_indexes[0;34m(self, key)[0m
[1;32m    624[0m         [0;31m# key can be mapped as an OuterIndexer.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    625[0m         [0;32mif[0m [0mall[0m[0;34m([0m[0;32mnot[0m [0misinstance[0m[0;34m([0m[0mk[0m[0;34m,[0m [0mVariable[0m[0;34m)[0m [0;32mfor[0m [0mk[0m [0;32min[0m [0mkey[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 626[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_broadcast_indexes_outer[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    627[0m [0;34m[0m[0m
[1;32m    628[0m         [0;31m# If all key is 1-dimensional and there are no duplicate labels,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/variable.py[0m in [0;36m_broadcast_indexes_outer[0;34m(self, key)[0m
[1;32m    698[0m             [0mnew_key[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    699[0m [0;34m[0m[0m
[0;32m--> 700[0;31m         [0;32mreturn[0m [0mdims[0m[0;34m,[0m [0mOuterIndexer[0m[0;34m([0m[0mtuple[0m[0;34m([0m[0mnew_key[0m[0;34m)[0m[0;34m)[0m[0;34m,[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    701[0m [0;34m[0m[0m
[1;32m    702[0m     [0;32mdef[0m [0m_nonzero[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/conda/lib/python3.9/site-packages/xarray/core/indexing.py[0m in [0;36m__init__[0;34m(self, key)[0m
[1;32m    270[0m             [0;32melif[0m [0misinstance[0m[0;34m([0m[0mk[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mndarray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    271[0m                 [0;32mif[0m [0;32mnot[0m [0mnp[0m[0;34m.[0m[0missubdtype[0m[0;34m([0m[0mk[0m[0;34m.[0m[0mdtype[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0minteger[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 272[0;31m                     raise TypeError(
[0m[1;32m    273[0m                         [0;34mf"invalid indexer array, does not have integer dtype: {k!r}"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    274[0m                     )

[0;31mTypeError[0m: invalid indexer array, does not have integer dtype: array(None, dtype=object)
TypeError: invalid indexer array, does not have integer dtype: array(None, dtype=object)

